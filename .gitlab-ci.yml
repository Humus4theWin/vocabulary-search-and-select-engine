# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/README.html#stages

# Stage sequence, this is not needed at the momment, but I still added it
stages:
  - build
  - test
  - deploy

pages:
  image: node:latest
  stage: deploy # List of stages for jobs, and their order of execution
  script:
    # NIGHTLY_VOCABS == null  -> update default vocabularies and build static page
    # NIGHTLY_VOCABS !== null -> only update default vocabularies
    - rm -f public/defaultVocabularies.json
    - '[ -n "$NIGHTLY_VOCABS" ] && mkdir public_copy' # store the current website build, because it will be deleted in an nightly default voc cycle
    - '[ -n "$NIGHTLY_VOCABS" ] && cp -r public/* public_copy' # store the current website build, because it will be deleted in an nightly default voc pipeline
    #- '[ -z "$NIGHTLY_VOCABS" ] && rm -rf public' # only if NIGHTLY_VOCABS is null, i.e. full re-build of website
    #- '[ -z "$NIGHTLY_VOCABS" ] && mkdir public' # only if NIGHTLY_VOCABS is null, i.e. full re-build of website
    - rm -rf public
    - mkdir public
    ### Nightly Vocabulary Update ###
    - npm install --prefix src/defaultVocPipeline
    - vocabs=$(node src/defaultVocPipeline/downloadParseCommit.js)
    #- '[[ "$vocabs" == "" ]] && cp -r public_copy/* public' # copy the last website build back to the public folder (vocab-fetch failed)
    #- '[[ "$vocabs" == "" ]] && exit 1;' # exit and FAIL the pipline to ensure no files are overwritten (vocab-fetch failed)
    - echo $vocabs >public/defaultVocabularies.json
    - '[ -n "$NIGHTLY_VOCABS" ] && cp -r public_copy/* public' # copy the last website build back to the public folder
    - '[ -n "$NIGHTLY_VOCABS" ] && exit 0;' # exit and COMPLETE the pipeline (nightly pipeline)
    ### Static Page Build ####
    - npm install --progress=false
    - npm run build
    - cp -r dist/* public
  artifacts:
    expire_in: 1 day
    paths:
      - public
  only:
    - master
    - 12-vocab-pipeline-initial-setup
    - 15-fix-deletion-issue-of-pipeline
